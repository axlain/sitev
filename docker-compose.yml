services:
  backend:
    build: ./backend
    container_name: php-backend
    env_file:
      - .env
    environment:
      # Asegúrate que tu app lea estas variables
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    volumes:
      - ./backend:/var/www/html
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sitev_network
    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: mysql-db
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS} # contraseña root (temporal/igual que DB_PASS para simplificar)
      MYSQL_DATABASE: ${DB_NAME} # crea la base en el primer arranque
      # Si tienes problemas de auth con PHP 8.1, descomenta la línea de abajo:
      # MYSQL_ROOT_HOST: "%"
    command:
      # Descomenta la siguiente línea si necesitas forzar el plugin antiguo:
      # ["mysqld", "--default-authentication-plugin=mysql_native_password"]
    volumes:
      - mysql_data:/var/lib/mysql
      - ./bd:/docker-entrypoint-initdb.d # scripts SQL de init (se ejecutan solo en el primer arranque del volumen)
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p${DB_PASS} --silent"]
      interval: 5s
      timeout: 3s
      retries: 15
    networks:
      - sitev_network
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: react-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:5173"
    networks:
      - sitev_network
    restart: unless-stopped

networks:
  sitev_network:
    driver: bridge

volumes:
  mysql_data:
